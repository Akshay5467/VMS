{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-07-12T04:40:17.117Z",
    "end": "2025-07-12T04:40:38.921Z",
    "duration": 21804,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dbe48f3b-60cb-4485-8543-d8836858f16a",
      "title": "",
      "fullFile": "cypress\\e2e\\Sourcing\\CreateCandidate.cy.js",
      "file": "cypress\\e2e\\Sourcing\\CreateCandidate.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fed85932-4ce0-4e5d-bc99-37e6be60a75e",
          "title": "Verify the login functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC_01-After successful login, it should redirects user to the program list page",
              "fullTitle": "Verify the login functionality TC_01-After successful login, it should redirects user to the program list page",
              "timedOut": null,
              "duration": 21751,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[formcontrolname=\"username\"]').type('akshay.khatode+4@simplifyvms.com');\ncy.get('[formcontrolname=\"password\"]').type('Akshay@1234');\ncy.get('[class=\"col-12 ps-1\"]').click().wait(5000);\ncy.origin('https://qa-hiring.simplifysandbox.net/dashboard', () => {\n  // create candidate\n  cy.get('[class=\"btn_text\"]').click().wait(2000);\n  const workerTypeSelector = '[class=\"ng-value ng-star-inserted\"]'; // Replace with your actual selector\n  // Check if field is already filled\n  cy.get(workerTypeSelector).then($el => {\n    const value = $el.text().trim();\n    if (value === '' || value === 'Select' || value === '--') {\n      cy.log('Worker Type not auto-filled. Selecting manually...');\n      // Click and select value\n      cy.get(workerTypeSelector).click();\n      // Wait for dropdown options and select the required one\n      cy.get('.dropdown-menu') // Replace with your actual dropdown container class\n      .contains('SOW Worker') // Or any fallback/default value\n      .click();\n      // Optional: Assert selection was successful\n      cy.get(workerTypeSelector).should('contain.text', 'SOW Worker');\n    } else {\n      cy.log('Worker Type is already auto-filled:', value);\n    }\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[class=\"ng-value ng-star-inserted\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[class=\"ng-value ng-star-inserted\"]`, but never found it.\n    at Context.eval (webpack://vms-simplify/./cypress/e2e/Sourcing/CreateCandidate.cy.js:17:7)",
                "diff": null
              },
              "uuid": "f4fc68cd-d5ce-4a7b-ba32-d56fb5d3ec77",
              "parentUUID": "fed85932-4ce0-4e5d-bc99-37e6be60a75e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f4fc68cd-d5ce-4a7b-ba32-d56fb5d3ec77"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21751,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}